services:
  app:
    image: library_front_prod
    container_name: library_front_prod
    build:
      context: ./library-frontend
      dockerfile: Dockerfile
    networks:
      - app_network

  server:
    image: library_back_prod
    user: node
    container_name: library_back_prod
    build:
      context: ./library_backend
      dockerfile: Dockerfile
    env_file:
      - ./library_backend/.env
    ports:
      - 4000:4000 # This won't work without defining port here, might be because of websocket
    depends_on:
      - mongo_library
    networks:
      - app_network

  mongo_library:
    image: mongo
    container_name: library_backend_mongo
    ports:
      - 3456:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: library_database
    volumes:
      - ./library_backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - mongo_data:/data/db
    networks:
      - app_network

  nginx_library:
    image: nginx:1.20.1
    container_name: reverse-proxy-library
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    depends_on:
      - app
      - server
    networks:
      - app_network

volumes:
  mongo_data:

networks:
  app_network:
