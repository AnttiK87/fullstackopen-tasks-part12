Script started on 2025-02-05 10:17:29+00:00 [TERM="xterm" TTY="/dev/pts/1" COLUMNS="149" LINES="9"]
# ^[[A^[[B^[[B            mongosh -u root -p example
]0;mongosh mongodb://<credentials>@127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000 Current Mongosh Log ID:	67a33adfbeace634b6544ca6
Connecting to:		[1m[32mmongodb://<credentials>@127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.3.8[0m
Using MongoDB:		8.0.4
[1m[33mUsing Mongosh[0m:		2.3.8

For mongosh info see: https://www.mongodb.com/docs/mongodb-shell/

[1G[0J [1G[1m[33m------[0m
   [1m[33mThe server generated these startup warnings when booting[0m
   2025-02-05T08:33:20.909+00:00: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine. See http://dochub.mongodb.org/core/prodnotes-filesystem
   2025-02-05T08:33:21.839+00:00: For customers running the current memory allocator, we suggest changing the contents of the following sysfsFile
   2025-02-05T08:33:21.839+00:00: We suggest setting the contents of sysfsFile to 0.
   2025-02-05T08:33:21.839+00:00: Your system has glibc support for rseq built in, which is not yet supported by tcmalloc-google and has critical performance implications. Please set the environment variable GLIBC_TUNABLES=glibc.pthread.rseq=0
   2025-02-05T08:33:21.839+00:00: vm.max_map_count is too low
   2025-02-05T08:33:21.839+00:00: We suggest setting swappiness to 0 or 1, as swapping can cause performance problems.
[1m[33m------[0m

[1G[0Jtest> [7Gshow dbs
[1madmin[0m         100.00 KiB
[1mconfig[0m         96.00 KiB
[1mlocal[0m          72.00 KiB
[1mthe_database[0m   72.00 KiB
[1G[0Jtest> [7Guse the_database
switched to db the_database
[1G[0Jthe_database> [15Gshow collections
[1mtodos[0m
[1G[0Jthe_database> [15Gdb.todos.find({})
[
  {
    _id: ObjectId([32m'67a3224f0a73d77ab0544ca8'[39m),
    text: [32m'Learn about composing'[39m,
    done: [33mfalse[39m
  },
  {
    _id: ObjectId([32m'67a3287db8aa3509fc3da66d'[39m),
    text: [32m'Learn about composing'[39m,
    done: [33mfalse[39m,
    __v: [33m0[39m
  }
]
[1G[0Jthe_database> [15G[1G[0Jthe_database> db.todos.find({})[32G[1G[0Jthe_database> db.todos.find({}[31G[1G[0Jthe_database> db.todos.find({[30G[1G[0Jthe_database> db.todos.find([29G[1G[0Jthe_database> db.todos.find[28G[1G[0Jthe_database> db.todos.fin[27G[1G[0Jthe_database> db.todos.fi[26G[1G[0Jthe_database> db.todos.f[25G[1G[0Jthe_database> db.todos.[24Ghelp

  [1m[33mCollection Class:[0m

    aggregate                                  Calculates aggregate values for the data in a collection or a view.
    bulkWrite                                  Performs multiple write operations with controls for order of execution.
    count                                      Returns the count of documents that would match a find() query for the collection or view.
    countDocuments                             Returns the count of documents that match the query for a collection or view.
    deleteMany                                 Removes all documents that match the filter from a collection.
    deleteOne                                  Removes a single document from a collection.
    distinct                                   Finds the distinct values for a specified field across a single collection or view and returns the results in an array.
    estimatedDocumentCount                     Returns the count of all documents in a collection or view.
    find                                       Selects documents in a collection or view.
    findAndModify                              Modifies and returns a single document.
    findOne                                    Selects documents in a collection or view.
    renameCollection                           Renames a collection.
    findOneAndDelete                           Deletes a single document based on the filter and sort criteria, returning the deleted document.
    findOneAndReplace                          Modifies and replaces a single document based on the filter and sort criteria.
    findOneAndUpdate                           Updates a single document based on the filter and sort criteria.
    insert                                     Inserts a document or documents into a collection.
    insertMany                                 Inserts multiple documents into a collection.
    insertOne                                  Inserts a document into a collection.
    isCapped                                   Checks if a collection is capped
    remove                                     Removes documents from a collection.
    replaceOne                                 Replaces a single document within the collection based on the filter.
    update                                     Modifies an existing document or documents in a collection.
    updateMany                                 Updates all documents that match the specified filter for a collection.
    updateOne                                  Updates a single document within the collection based on the filter.
    compactStructuredEncryptionData            Compacts structured encryption data
    convertToCapped                            calls {convertToCapped:'coll', size:maxBytes}} command
    createIndexes                              Creates one or more indexes on a collection
    createIndex                                Creates one index on a collection
    ensureIndex                                Creates one index on a collection
    getIndexes                                 Returns an array that holds a list of documents that identify and describe the existing indexes on the collection.
    getIndexSpecs                              Alias for getIndexes. Returns an array that holds a list of documents that identify and describe the existing indexes on the collection.
    getIndices                                 Alias for getIndexes. Returns an array that holds a list of documents that identify and describe the existing indexes on the collection.
    getIndexKeys                               Return an array of key patterns for indexes defined on collection
    dropIndexes                                Drops the specified index or indexes (except the index on the _id field) from a collection.
    dropIndex                                  Drops or removes the specified index from a collection.
    totalIndexSize                             Reports the total size used by the indexes on a collection.
    reIndex                                    Rebuilds all existing indexes on a collection.
    getDB                                      Get current database.
    getMongo                                   Returns the Mongo object.
    dataSize                                   This method provides a wrapper around the size output of the collStats (i.e. db.collection.stats()) command.
    storageSize                                The total amount of storage allocated to this collection for document storage.
    totalSize                                  The total size in bytes of the data in the collection plus the size of every index on the collection.
    drop                                       Removes a collection or view from the database.
    exists                                     Returns collection infos if the collection exists or null otherwise.
    getFullName                                Returns the name of the collection prefixed with the database name.
    getName                                    Returns the name of the collection.
    runCommand                                 Runs a db command with the given name where the first param is the collection name.
    explain                                    Returns information on the query plan.
    stats                                      Returns statistics about the collection.
    latencyStats                               returns the $latencyStats aggregation for the collection. Takes an options document with an optional boolean 'histograms' field.
    initializeOrderedBulkOp                    Initializes an ordered bulk command. Returns an instance of Bulk
    initializeUnorderedBulkOp                  Initializes an unordered bulk command. Returns an instance of Bulk
    getPlanCache                               Returns an interface to access the query plan cache for a collection. The interface provides methods to view and clear the query plan cache.
    mapReduce                                  Calls the mapReduce command
    validate                                   Calls the validate command. Default full value is false
    getShardVersion                            Calls the getShardVersion command
    getShardDistribution                       Prints the data distribution statistics for a sharded collection.
    watch                                      Opens a change stream cursor on the collection
    hideIndex                                  Hides an existing index from the query planner.
    unhideIndex                                Unhides an existing index from the query planner.
    analyzeShardKey                            Returns metrics for evaluating a shard key. That is, â€˜keyâ€™ can be a candidate shard key for an unsharded or sharded collection, or the current shard key for a sharded collection.
    configureQueryAnalyzer                     Starts or stops collecting metrics about reads and writes against an unsharded or sharded collection.
    checkMetadataConsistency                   Returns a cursor with information about metadata inconsistencies
    getSearchIndexes                           Returns an array that holds a list of documents that identify and describe the existing search indexes on the collection.
    createSearchIndex                          Creates one search indexes on a collection
    createSearchIndexes                        Creates one or more search indexes on a collection
    dropSearchIndex                            Drops or removes the specified search index from a collection.
    updateSearchIndex                          Updates the sepecified search index.

[1G[0Jthe_database> [15G[1G[0Jthe_database> db.todos.help[28G[1G[0Jthe_database> db.todos.hel[27G[1G[0Jthe_database> db.todos.he[26G[1G[0Jthe_database> db.todos.h[25G[1G[0Jthe_database> db.todos.[24GinsertOne[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m'test'[39m, [33mdone[39m: [33mfalse[39m})[62G[1D[1G[0Jthe_database> db.todos.insertOne[44m([49m{[33mtext[39m: [32m'test'[39m, [33mdone[39m: [33mfalse[39m})[61G[1D[1G[0Jthe_database> db.todos.insertOne([44m{[49m[33mtext[39m: [32m'test'[39m, [33mdone[39m: [33mfalse[39m})[60G[1D[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m'test'[39m, [33mdone[39m: [33mfalse[39m})[59G[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mtest'[39m, [33mdone[39m: [33mfalse[39m})[46G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mtes'[39m, [33mdone[39m: [33mfalse[39m})[45G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mte'[39m, [33mdone[39m: [33mfalse[39m})[44G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mt'[39m, [33mdone[39m: [33mfalse[39m})[43G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49m'[39m, [33mdone[39m: [33mfalse[39m})[42G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mI'[39m, [33mdone[39m: [33mfalse[39m})[43G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIn'[39m, [33mdone[39m: [33mfalse[39m})[44G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mInc'[39m, [33mdone[39m: [33mfalse[39m})[45G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncr'[39m, [33mdone[39m: [33mfalse[39m})[46G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncre'[39m, [33mdone[39m: [33mfalse[39m})[47G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrea'[39m, [33mdone[39m: [33mfalse[39m})[48G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncreas'[39m, [33mdone[39m: [33mfalse[39m})[49G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease'[39m, [33mdone[39m: [33mfalse[39m})[50G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease '[39m, [33mdone[39m: [33mfalse[39m})[51G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease t'[39m, [33mdone[39m: [33mfalse[39m})[52G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease th'[39m, [33mdone[39m: [33mfalse[39m})[53G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease the'[39m, [33mdone[39m: [33mfalse[39m})[54G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease the '[39m, [33mdone[39m: [33mfalse[39m})[55G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease the n'[39m, [33mdone[39m: [33mfalse[39m})[56G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease the nu'[39m, [33mdone[39m: [33mfalse[39m})[57G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease the num'[39m, [33mdone[39m: [33mfalse[39m})[58G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease the numb'[39m, [33mdone[39m: [33mfalse[39m})[59G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease the numbe'[39m, [33mdone[39m: [33mfalse[39m})[60G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease the number'[39m, [33mdone[39m: [33mfalse[39m})[61G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease the number '[39m, [33mdone[39m: [33mfalse[39m})[62G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease the number o'[39m, [33mdone[39m: [33mfalse[39m})[63G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease the number of'[39m, [33mdone[39m: [33mfalse[39m})[64G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease the number of '[39m, [33mdone[39m: [33mfalse[39m})[65G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease the number of t'[39m, [33mdone[39m: [33mfalse[39m})[66G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease the number of to'[39m, [33mdone[39m: [33mfalse[39m})[67G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease the number of too'[39m, [33mdone[39m: [33mfalse[39m})[68G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease the number of tool'[39m, [33mdone[39m: [33mfalse[39m})[69G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease the number of tools'[39m, [33mdone[39m: [33mfalse[39m})[70G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease the number of tools '[39m, [33mdone[39m: [33mfalse[39m})[71G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease the number of tools i'[39m, [33mdone[39m: [33mfalse[39m})[72G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease the number of tools in'[39m, [33mdone[39m: [33mfalse[39m})[73G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease the number of tools in '[39m, [33mdone[39m: [33mfalse[39m})[74G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease the number of tools in m'[39m, [33mdone[39m: [33mfalse[39m})[75G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease the number of tools in my'[39m, [33mdone[39m: [33mfalse[39m})[76G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease the number of tools in my '[39m, [33mdone[39m: [33mfalse[39m})[77G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease the number of tools in my t'[39m, [33mdone[39m: [33mfalse[39m})[78G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease the number of tools in my to'[39m, [33mdone[39m: [33mfalse[39m})[79G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease the number of tools in my too'[39m, [33mdone[39m: [33mfalse[39m})[80G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease the number of tools in my tool'[39m, [33mdone[39m: [33mfalse[39m})[81G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease the number of tools in my tool '[39m, [33mdone[39m: [33mfalse[39m})[82G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease the number of tools in my tool b'[39m, [33mdone[39m: [33mfalse[39m})[83G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease the number of tools in my tool be'[39m, [33mdone[39m: [33mfalse[39m})[84G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease the number of tools in my tool bel'[39m, [33mdone[39m: [33mfalse[39m})[85G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m'[49mIncrease the number of tools in my tool belt'[39m, [33mdone[39m: [33mfalse[39m})[86G[16C[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m'Increase the number of tools in my tool belt'[39m, [33mdone[39m: [33mfalse[39m})[102G
{
  acknowledged: [33mtrue[39m,
  insertedId: ObjectId([32m'67a33b47beace634b6544ca7'[39m)
}
[1G[0Jthe_database> [15G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m'Increase the number of tools in my tool belt'[39m, [33mdone[39m: [33mfalse[39m})[102G[1G[0Jthe_database> db.todos.help[28G[1G[0Jthe_database> db.todos.find({})[32G
[
  {
    _id: ObjectId([32m'67a3224f0a73d77ab0544ca8'[39m),
    text: [32m'Learn about composing'[39m,
    done: [33mfalse[39m
  },
  {
    _id: ObjectId([32m'67a3287db8aa3509fc3da66d'[39m),
    text: [32m'Learn about composing'[39m,
    done: [33mfalse[39m,
    __v: [33m0[39m
  },
  {
    _id: ObjectId([32m'67a33b47beace634b6544ca7'[39m),
    text: [32m'Increase the number of tools in my tool belt'[39m,
    done: [33mfalse[39m
  }
]
[1G[0Jthe_database> [15Gexit
# exit

Script done on 2025-02-05 10:20:17+00:00 [COMMAND_EXIT_CODE="0"]
